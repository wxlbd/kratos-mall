syntax = "proto3";

package api.product.v1;

import "validate/validate.proto";
import "google/api/annotations.proto";

option go_package = "kratos-admin/api/product/v1;v1";
option java_multiple_files = true;
option java_package = "api.product.v1";

enum DisplayStatus {
	UNKNOWN = 0;
	SHOW = 1;
	HIDE = 2;
}

message ProductCategory {
	string id = 1;
	string name = 2;
	int32 level = 3;
	string parent_id = 4;
	int32 sort = 5;
	string icon = 6;
	string description = 7;
	repeated string keywords = 8;
	int32 product_count = 9;
	string product_unit = 10;
	DisplayStatus nav_status = 11;
	DisplayStatus show_status = 12;
}

message CreateProductCategoryRequest {
	ProductCategory product_category = 1;
}

message CreateProductCategoryReply {
	string id = 1;
}

message UpdateProductCategoryRequest {
	ProductCategory product_category = 1;
	string product_category_id = 2;
}

message UpdateProductCategoryReply {
}

message DeleteProductCategoryRequest {
	string product_category_id = 1;
}

message DeleteProductCategoryReply {
}

message FindProductCategoryRequest {
	string product_category_id = 1;
}

message FindProductCategoryReply {
	ProductCategory product_category_id = 1;
}

message FindProductCategoryListRequest {
	int32 page_number = 1;
	int32 page_size = 2;
	string name = 3;
	int32 level = 4;
	int64 parent_id = 5;
	DisplayStatus nav_status = 6;
	DisplayStatus show_status = 7;
}

message FindProductCategoryListReply {
	repeated ProductCategory product_categories = 1;
	int32 total = 2;
}


message FindProductCategoryTreeRequest {

}

message ProductCategoryTreeNode {
	ProductCategory product_category = 1;
	repeated ProductCategoryTreeNode children = 2;
}

message FindProductCategoryTreeReply {
	repeated ProductCategoryTreeNode tree = 1;
}

service Product {
	rpc CreateProductCategory (CreateProductCategoryRequest) returns (CreateProductCategoryReply){
		option (google.api.http) = {
			post: "/v1/product/category"
			body: "*"
		};
	}

	rpc UpdateProductCategory (UpdateProductCategoryRequest) returns (UpdateProductCategoryReply){
		option (google.api.http) = {
			put: "/v1/product/category/{product_category_id}"
			body: "*"
		};
	}

	rpc DeleteProductCategory (DeleteProductCategoryRequest) returns (DeleteProductCategoryReply){
		option (google.api.http) = {
			delete: "/v1/product/category/{product_category_id}"
		};
	}

	rpc FindProductCategory (FindProductCategoryRequest) returns (FindProductCategoryReply){
		option (google.api.http) = {
			get: "/v1/product/category/{product_category_id}"
		};
	}

	rpc FindProductCategoryList (FindProductCategoryListRequest) returns (FindProductCategoryListReply){
		option (google.api.http) = {
			get: "/v1/product/category"
		};
	}

	rpc FindProductCategoryTree (FindProductCategoryTreeRequest) returns (FindProductCategoryTreeReply){
		option (google.api.http) = {
			get: "/v1/product/category/tree"
		};
	}

	// 创建商品
	rpc CreateProduct (CreateProductRequest) returns (CreateProductReply){
		option (google.api.http) = {
			post: "/v1/product"
			body: "*"
		};
	};
	// 更新商品
	rpc UpdateProduct (UpdateProductRequest) returns (UpdateProductReply){
		option (google.api.http) = {
			put: "/v1/product/{product_id}"
			body: "*"
		};
	};
	// 删除商品
	rpc DeleteProduct (DeleteProductRequest) returns (DeleteProductReply){
		option (google.api.http) = {
			delete: "/v1/product/{product_id}"
		};
	};
	// 获取商品详情
	rpc GetProduct (GetProductRequest) returns (GetProductReply){
		option (google.api.http) = {
			get: "/v1/product/{product_id}"
		};
	};
	// 获取商品列表
	rpc ListProduct (ListProductRequest) returns (ListProductReply){
		option (google.api.http) = {
			get: "/v1/product"
		};
	};
	// 获取商品sku列表
	rpc ListProductSku (ListProductSkuRequest) returns (ListProductSkuReply){
		option (google.api.http) = {
			get: "/v1/product/{product_id}/sku"
		};
	}
	// 删除商品sku
	rpc DeleteProductSku (DeleteProductSkuRequest) returns (DeleteProductSkuReply){
		option (google.api.http) = {
			delete: "/v1/product/{product_id}/sku/{product_sku_id}"
		};
	}
}
message DeleteProductSkuRequest {
	int64 product_id = 1;
	int64 product_sku_id = 2;
}

message DeleteProductSkuReply {
}


message ListProductSkuRequest {
	int64       product_id = 1;
}
message ListProductSkuReply {
	repeated Sku sku = 1;
}

message Sku {
	string    sku_code = 1;
	float      price = 2;
	int64      stock = 3;
	int64      stock_warn = 4;
	string    pic = 5;
	int64      sales = 6;
	float     promotion_price = 7;
	int64     gift_block_stock = 8;
	string    sku_name = 9;
	string    attribute_data = 10;//属性数据json
}

message CreateProductRequest {
	repeated string       product_category_id = 1;// 产品分类列表
	string       brand_id = 2;// 品牌id
	string       flash_promotion_id = 3;// 闪购活动
	string       product_attribute_category_id = 4;// 属性分类
	string      name = 5;// 商品名称
	string      pic = 6;// 主图
	string      product_sn = 7;// 商品编码
	int64       publish_status = 8;// 上下架状态
	int64       new_status = 9;// 是否新品
	int64       recommend_status = 10;// 是否推荐
	int64       verify_status = 11;// 审核状态
	int64       sort = 12;// 排序
	int64       total_sales = 13;// 销量
	double        price = 14;// 售卖价(sku里的最低价格)
	double        promotion_price = 15;// 促销价
	int64       gift_growth = 16;
	int64       gift_point = 17;// 赠送的积分
	int64       use_point_limit = 18;// 限制使用的积分
	string      sub_title = 19;// 副标题
	string      description = 20;// 描述
	double        original_price = 21;// 原价
	int64       stock = 22;// 库存
	int64       stock_warn = 23;// 库存预警值
	string      unit = 24;// 单位
	double        weight = 25;// 重量
	int64       preview_status = 26;// 是否为预览商品
	repeated int64       service_ids = 27;// 产品服务id数组
	repeated string      keywords = 28; // 关键字
	string      note = 29;// 商品备注
	repeated string      album_pics = 30[(validate.rules).repeated = {max_items: 5}];// 画册图片,连产品图片限制为5张
	string      detail_title = 31;// 产品详述标题
	string      detail_desc = 32;// 产品详述描述
	string      detail_html = 33;// 产品详述
	string      detail_mobile_html = 34;// 产品详述移动端
	string   promotion_start_time = 35;// 促销开始时间
	string   promotion_end_time = 36;// 促销结束时间
	int64       promotion_per_limit = 37;// 活动限购数量
	int64       promotion_type = 38;// 促销类型
	string      brand_name = 39;// 品牌名称
	string      product_category_name = 40;// 产品分类名称
	repeated Sku      sku_list = 41[(validate.rules).repeated = {min_items: 1}];// sku列表
}
message CreateProductReply {
	string       ProductId = 1;
}
message UpdateProductRequest {
	string       product_id = 1; // 商品id（使用字符串防止在js中精度丢失）
	repeated string       product_category_id = 2;// 产品分类列表
	string       brand_id = 3;// 品牌id
	string       flash_promotion_id = 4;// 闪购活动
	string       product_attribute_category_id = 5;// 属性分类
	string      name = 6;// 商品名称
	string      pic = 7;// 主图
	string      product_sn = 8;// 商品编码
	int64       publish_status = 9;// 上下架状态
	int64       new_status = 10;// 是否新品
	int64       recommend_status = 11;// 是否推荐
	int64       verify_status = 12;// 审核状态
	int64       sort = 13;// 排序
	int64       total_sales = 14;// 销量
	double        price = 15;// 售卖价(sku里的最低价格)
	double        promotion_price = 16;// 促销价
	int64       gift_growth = 17;
	int64       gift_point = 18;// 赠送的积分
	int64       use_point_limit = 19;// 限制使用的积分
	string      sub_title = 20;// 副标题
	string      description = 21;// 描述
	double        original_price = 22;// 原价
	int64       stock = 23;// 库存
	int64       stock_warn = 24;// 库存预警值
	string      unit = 25;// 单位
	double        weight = 26;// 重量
	int64       preview_status = 27;// 是否为预览商品
	repeated int64       service_ids = 28;// 产品服务id数组
	repeated string      keywords = 29; // 关键字
	string      note = 30;// 商品备注
	repeated string      album_pics = 31[(validate.rules).repeated = {max_items: 5}];// 画册图片,连产品图片限制为5张
	string      detail_title = 32;// 产品详述标题
	string      detail_desc = 33;// 产品详述描述
	string      detail_html = 34;// 产品详述
	string      detail_mobile_html = 35;// 产品详述移动端
	string   promotion_start_time = 36;// 促销开始时间
	string   promotion_end_time = 37;// 促销结束时间
	int64       promotion_per_limit = 38;// 活动限购数量
	int64       promotion_type = 39;// 促销类型
	string      brand_name = 40;// 品牌名称
	string      product_category_name = 41;// 产品分类名称
	repeated Sku      sku_list = 42[(validate.rules).repeated = {min_items: 1}];// sku列表
}
message UpdateProductReply {}

message DeleteProductRequest {
	string       product_id = 1;
}
message DeleteProductReply {}

message GetProductRequest {
	string       product_id = 1;
}
message GetProductReply {}

message ListProductRequest {
}
message ListProductReply {}


service ProductService {

}