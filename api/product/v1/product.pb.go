// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: api/product/v1/product.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MemberPriceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberLevelId   int64   `protobuf:"varint,1,opt,name=MemberLevelId,proto3" json:"MemberLevelId,omitempty"`
	MemberPrice     float32 `protobuf:"fixed32,2,opt,name=MemberPrice,proto3" json:"MemberPrice,omitempty"`
	MemberLevelName string  `protobuf:"bytes,3,opt,name=MemberLevelName,proto3" json:"MemberLevelName,omitempty"`
}

func (x *MemberPriceList) Reset() {
	*x = MemberPriceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_product_v1_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberPriceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberPriceList) ProtoMessage() {}

func (x *MemberPriceList) ProtoReflect() protoreflect.Message {
	mi := &file_api_product_v1_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberPriceList.ProtoReflect.Descriptor instead.
func (*MemberPriceList) Descriptor() ([]byte, []int) {
	return file_api_product_v1_product_proto_rawDescGZIP(), []int{0}
}

func (x *MemberPriceList) GetMemberLevelId() int64 {
	if x != nil {
		return x.MemberLevelId
	}
	return 0
}

func (x *MemberPriceList) GetMemberPrice() float32 {
	if x != nil {
		return x.MemberPrice
	}
	return 0
}

func (x *MemberPriceList) GetMemberLevelName() string {
	if x != nil {
		return x.MemberLevelName
	}
	return ""
}

type ProductAttributeValueList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductAttributeId int64  `protobuf:"varint,1,opt,name=ProductAttributeId,proto3" json:"ProductAttributeId,omitempty"`
	AttributeValues    string `protobuf:"bytes,2,opt,name=AttributeValues,proto3" json:"AttributeValues,omitempty"`
}

func (x *ProductAttributeValueList) Reset() {
	*x = ProductAttributeValueList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_product_v1_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeValueList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeValueList) ProtoMessage() {}

func (x *ProductAttributeValueList) ProtoReflect() protoreflect.Message {
	mi := &file_api_product_v1_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeValueList.ProtoReflect.Descriptor instead.
func (*ProductAttributeValueList) Descriptor() ([]byte, []int) {
	return file_api_product_v1_product_proto_rawDescGZIP(), []int{1}
}

func (x *ProductAttributeValueList) GetProductAttributeId() int64 {
	if x != nil {
		return x.ProductAttributeId
	}
	return 0
}

func (x *ProductAttributeValueList) GetAttributeValues() string {
	if x != nil {
		return x.AttributeValues
	}
	return ""
}

type ProductFullReductionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullPrice   float32 `protobuf:"fixed32,1,opt,name=FullPrice,proto3" json:"FullPrice,omitempty"`
	ReducePrice float32 `protobuf:"fixed32,2,opt,name=ReducePrice,proto3" json:"ReducePrice,omitempty"`
}

func (x *ProductFullReductionList) Reset() {
	*x = ProductFullReductionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_product_v1_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductFullReductionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductFullReductionList) ProtoMessage() {}

func (x *ProductFullReductionList) ProtoReflect() protoreflect.Message {
	mi := &file_api_product_v1_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductFullReductionList.ProtoReflect.Descriptor instead.
func (*ProductFullReductionList) Descriptor() ([]byte, []int) {
	return file_api_product_v1_product_proto_rawDescGZIP(), []int{2}
}

func (x *ProductFullReductionList) GetFullPrice() float32 {
	if x != nil {
		return x.FullPrice
	}
	return 0
}

func (x *ProductFullReductionList) GetReducePrice() float32 {
	if x != nil {
		return x.ReducePrice
	}
	return 0
}

type ProductLadderList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    int64   `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`
	Discount float32 `protobuf:"fixed32,3,opt,name=Discount,proto3" json:"Discount,omitempty"`
	Price    float32 `protobuf:"fixed32,4,opt,name=Price,proto3" json:"Price,omitempty"`
}

func (x *ProductLadderList) Reset() {
	*x = ProductLadderList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_product_v1_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductLadderList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductLadderList) ProtoMessage() {}

func (x *ProductLadderList) ProtoReflect() protoreflect.Message {
	mi := &file_api_product_v1_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductLadderList.ProtoReflect.Descriptor instead.
func (*ProductLadderList) Descriptor() ([]byte, []int) {
	return file_api_product_v1_product_proto_rawDescGZIP(), []int{3}
}

func (x *ProductLadderList) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ProductLadderList) GetDiscount() float32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *ProductLadderList) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type SkuStockList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuCode        string  `protobuf:"bytes,1,opt,name=SkuCode,proto3" json:"SkuCode,omitempty"`
	Price          float32 `protobuf:"fixed32,2,opt,name=Price,proto3" json:"Price,omitempty"`
	Stock          int64   `protobuf:"varint,3,opt,name=Stock,proto3" json:"Stock,omitempty"`
	LowStock       int64   `protobuf:"varint,4,opt,name=LowStock,proto3" json:"LowStock,omitempty"`
	Pic            string  `protobuf:"bytes,5,opt,name=Pic,proto3" json:"Pic,omitempty"`
	Sale           int64   `protobuf:"varint,6,opt,name=Sale,proto3" json:"Sale,omitempty"`
	PromotionPrice float32 `protobuf:"fixed32,7,opt,name=PromotionPrice,proto3" json:"PromotionPrice,omitempty"`
	LockStock      int64   `protobuf:"varint,8,opt,name=LockStock,proto3" json:"LockStock,omitempty"`
	SpData         string  `protobuf:"bytes,9,opt,name=SpData,proto3" json:"SpData,omitempty"`
}

func (x *SkuStockList) Reset() {
	*x = SkuStockList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_product_v1_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuStockList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuStockList) ProtoMessage() {}

func (x *SkuStockList) ProtoReflect() protoreflect.Message {
	mi := &file_api_product_v1_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuStockList.ProtoReflect.Descriptor instead.
func (*SkuStockList) Descriptor() ([]byte, []int) {
	return file_api_product_v1_product_proto_rawDescGZIP(), []int{4}
}

func (x *SkuStockList) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *SkuStockList) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SkuStockList) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *SkuStockList) GetLowStock() int64 {
	if x != nil {
		return x.LowStock
	}
	return 0
}

func (x *SkuStockList) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *SkuStockList) GetSale() int64 {
	if x != nil {
		return x.Sale
	}
	return 0
}

func (x *SkuStockList) GetPromotionPrice() float32 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *SkuStockList) GetLockStock() int64 {
	if x != nil {
		return x.LockStock
	}
	return 0
}

func (x *SkuStockList) GetSpData() string {
	if x != nil {
		return x.SpData
	}
	return ""
}

type CreateProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductCategoryIds         []int64                      `protobuf:"varint,1,rep,packed,name=ProductCategoryIds,proto3" json:"ProductCategoryIds,omitempty"`
	BrandId                    int64                        `protobuf:"varint,2,opt,name=BrandId,proto3" json:"BrandId,omitempty"`
	ProductCategoryId          int64                        `protobuf:"varint,3,opt,name=ProductCategoryId,proto3" json:"ProductCategoryId,omitempty"`
	FeightTemplateId           int64                        `protobuf:"varint,4,opt,name=FeightTemplateId,proto3" json:"FeightTemplateId,omitempty"`
	ProductAttributeCategoryId int64                        `protobuf:"varint,5,opt,name=ProductAttributeCategoryId,proto3" json:"ProductAttributeCategoryId,omitempty"`
	Name                       string                       `protobuf:"bytes,6,opt,name=Name,proto3" json:"Name,omitempty"`
	Pic                        string                       `protobuf:"bytes,7,opt,name=Pic,proto3" json:"Pic,omitempty"`
	ProductSn                  string                       `protobuf:"bytes,8,opt,name=ProductSn,proto3" json:"ProductSn,omitempty"`
	DeleteStatus               int64                        `protobuf:"varint,9,opt,name=DeleteStatus,proto3" json:"DeleteStatus,omitempty"`
	PublishStatus              int64                        `protobuf:"varint,10,opt,name=PublishStatus,proto3" json:"PublishStatus,omitempty"`
	NewStatus                  int64                        `protobuf:"varint,11,opt,name=NewStatus,proto3" json:"NewStatus,omitempty"`
	RecommandStatus            int64                        `protobuf:"varint,12,opt,name=RecommandStatus,proto3" json:"RecommandStatus,omitempty"`
	VerifyStatus               int64                        `protobuf:"varint,13,opt,name=VerifyStatus,proto3" json:"VerifyStatus,omitempty"`
	Sort                       int64                        `protobuf:"varint,14,opt,name=Sort,proto3" json:"Sort,omitempty"`
	Sale                       int64                        `protobuf:"varint,15,opt,name=Sale,proto3" json:"Sale,omitempty"`
	Price                      float64                      `protobuf:"fixed64,16,opt,name=Price,proto3" json:"Price,omitempty"`
	PromotionPrice             float64                      `protobuf:"fixed64,17,opt,name=PromotionPrice,proto3" json:"PromotionPrice,omitempty"`
	GiftGrowth                 int64                        `protobuf:"varint,18,opt,name=GiftGrowth,proto3" json:"GiftGrowth,omitempty"`
	GiftPoint                  int64                        `protobuf:"varint,19,opt,name=GiftPoint,proto3" json:"GiftPoint,omitempty"`
	UsePointLimit              int64                        `protobuf:"varint,20,opt,name=UsePointLimit,proto3" json:"UsePointLimit,omitempty"`
	SubTitle                   string                       `protobuf:"bytes,21,opt,name=SubTitle,proto3" json:"SubTitle,omitempty"`
	Description                string                       `protobuf:"bytes,22,opt,name=Description,proto3" json:"Description,omitempty"`
	OriginalPrice              float64                      `protobuf:"fixed64,23,opt,name=OriginalPrice,proto3" json:"OriginalPrice,omitempty"`
	Stock                      int64                        `protobuf:"varint,24,opt,name=Stock,proto3" json:"Stock,omitempty"`
	LowStock                   int64                        `protobuf:"varint,25,opt,name=LowStock,proto3" json:"LowStock,omitempty"`
	Unit                       string                       `protobuf:"bytes,26,opt,name=Unit,proto3" json:"Unit,omitempty"`
	Weight                     float64                      `protobuf:"fixed64,27,opt,name=Weight,proto3" json:"Weight,omitempty"`
	PreviewStatus              int64                        `protobuf:"varint,28,opt,name=PreviewStatus,proto3" json:"PreviewStatus,omitempty"`
	ServiceIds                 string                       `protobuf:"bytes,29,opt,name=ServiceIds,proto3" json:"ServiceIds,omitempty"`
	Keywords                   string                       `protobuf:"bytes,30,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
	Note                       string                       `protobuf:"bytes,31,opt,name=Note,proto3" json:"Note,omitempty"`
	AlbumPics                  string                       `protobuf:"bytes,32,opt,name=AlbumPics,proto3" json:"AlbumPics,omitempty"`
	DetailTitle                string                       `protobuf:"bytes,33,opt,name=DetailTitle,proto3" json:"DetailTitle,omitempty"`
	DetailDesc                 string                       `protobuf:"bytes,34,opt,name=DetailDesc,proto3" json:"DetailDesc,omitempty"`
	DetailHtml                 string                       `protobuf:"bytes,35,opt,name=DetailHtml,proto3" json:"DetailHtml,omitempty"`
	DetailMobileHtml           string                       `protobuf:"bytes,36,opt,name=DetailMobileHtml,proto3" json:"DetailMobileHtml,omitempty"`
	PromotionStartTime         string                       `protobuf:"bytes,37,opt,name=PromotionStartTime,proto3" json:"PromotionStartTime,omitempty"`
	PromotionEndTime           string                       `protobuf:"bytes,38,opt,name=PromotionEndTime,proto3" json:"PromotionEndTime,omitempty"`
	PromotionPerLimit          int64                        `protobuf:"varint,39,opt,name=PromotionPerLimit,proto3" json:"PromotionPerLimit,omitempty"`
	PromotionType              int64                        `protobuf:"varint,40,opt,name=PromotionType,proto3" json:"PromotionType,omitempty"`
	BrandName                  string                       `protobuf:"bytes,41,opt,name=BrandName,proto3" json:"BrandName,omitempty"`
	ProductCategoryName        string                       `protobuf:"bytes,42,opt,name=ProductCategoryName,proto3" json:"ProductCategoryName,omitempty"`
	MemberPriceList            []*MemberPriceList           `protobuf:"bytes,43,rep,name=MemberPriceList,proto3" json:"MemberPriceList,omitempty"`
	ProductAttributeValueList  []*ProductAttributeValueList `protobuf:"bytes,44,rep,name=ProductAttributeValueList,proto3" json:"ProductAttributeValueList,omitempty"`
	ProductFullReductionList   []*ProductFullReductionList  `protobuf:"bytes,45,rep,name=ProductFullReductionList,proto3" json:"ProductFullReductionList,omitempty"`
	ProductLadderList          []*ProductLadderList         `protobuf:"bytes,46,rep,name=ProductLadderList,proto3" json:"ProductLadderList,omitempty"`
	SkuStockList               []*SkuStockList              `protobuf:"bytes,47,rep,name=SkuStockList,proto3" json:"SkuStockList,omitempty"`
}

func (x *CreateProductRequest) Reset() {
	*x = CreateProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_product_v1_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductRequest) ProtoMessage() {}

func (x *CreateProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_product_v1_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductRequest.ProtoReflect.Descriptor instead.
func (*CreateProductRequest) Descriptor() ([]byte, []int) {
	return file_api_product_v1_product_proto_rawDescGZIP(), []int{5}
}

func (x *CreateProductRequest) GetProductCategoryIds() []int64 {
	if x != nil {
		return x.ProductCategoryIds
	}
	return nil
}

func (x *CreateProductRequest) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *CreateProductRequest) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *CreateProductRequest) GetFeightTemplateId() int64 {
	if x != nil {
		return x.FeightTemplateId
	}
	return 0
}

func (x *CreateProductRequest) GetProductAttributeCategoryId() int64 {
	if x != nil {
		return x.ProductAttributeCategoryId
	}
	return 0
}

func (x *CreateProductRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProductRequest) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *CreateProductRequest) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *CreateProductRequest) GetDeleteStatus() int64 {
	if x != nil {
		return x.DeleteStatus
	}
	return 0
}

func (x *CreateProductRequest) GetPublishStatus() int64 {
	if x != nil {
		return x.PublishStatus
	}
	return 0
}

func (x *CreateProductRequest) GetNewStatus() int64 {
	if x != nil {
		return x.NewStatus
	}
	return 0
}

func (x *CreateProductRequest) GetRecommandStatus() int64 {
	if x != nil {
		return x.RecommandStatus
	}
	return 0
}

func (x *CreateProductRequest) GetVerifyStatus() int64 {
	if x != nil {
		return x.VerifyStatus
	}
	return 0
}

func (x *CreateProductRequest) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *CreateProductRequest) GetSale() int64 {
	if x != nil {
		return x.Sale
	}
	return 0
}

func (x *CreateProductRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateProductRequest) GetPromotionPrice() float64 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *CreateProductRequest) GetGiftGrowth() int64 {
	if x != nil {
		return x.GiftGrowth
	}
	return 0
}

func (x *CreateProductRequest) GetGiftPoint() int64 {
	if x != nil {
		return x.GiftPoint
	}
	return 0
}

func (x *CreateProductRequest) GetUsePointLimit() int64 {
	if x != nil {
		return x.UsePointLimit
	}
	return 0
}

func (x *CreateProductRequest) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *CreateProductRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateProductRequest) GetOriginalPrice() float64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *CreateProductRequest) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *CreateProductRequest) GetLowStock() int64 {
	if x != nil {
		return x.LowStock
	}
	return 0
}

func (x *CreateProductRequest) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *CreateProductRequest) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *CreateProductRequest) GetPreviewStatus() int64 {
	if x != nil {
		return x.PreviewStatus
	}
	return 0
}

func (x *CreateProductRequest) GetServiceIds() string {
	if x != nil {
		return x.ServiceIds
	}
	return ""
}

func (x *CreateProductRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *CreateProductRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *CreateProductRequest) GetAlbumPics() string {
	if x != nil {
		return x.AlbumPics
	}
	return ""
}

func (x *CreateProductRequest) GetDetailTitle() string {
	if x != nil {
		return x.DetailTitle
	}
	return ""
}

func (x *CreateProductRequest) GetDetailDesc() string {
	if x != nil {
		return x.DetailDesc
	}
	return ""
}

func (x *CreateProductRequest) GetDetailHtml() string {
	if x != nil {
		return x.DetailHtml
	}
	return ""
}

func (x *CreateProductRequest) GetDetailMobileHtml() string {
	if x != nil {
		return x.DetailMobileHtml
	}
	return ""
}

func (x *CreateProductRequest) GetPromotionStartTime() string {
	if x != nil {
		return x.PromotionStartTime
	}
	return ""
}

func (x *CreateProductRequest) GetPromotionEndTime() string {
	if x != nil {
		return x.PromotionEndTime
	}
	return ""
}

func (x *CreateProductRequest) GetPromotionPerLimit() int64 {
	if x != nil {
		return x.PromotionPerLimit
	}
	return 0
}

func (x *CreateProductRequest) GetPromotionType() int64 {
	if x != nil {
		return x.PromotionType
	}
	return 0
}

func (x *CreateProductRequest) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *CreateProductRequest) GetProductCategoryName() string {
	if x != nil {
		return x.ProductCategoryName
	}
	return ""
}

func (x *CreateProductRequest) GetMemberPriceList() []*MemberPriceList {
	if x != nil {
		return x.MemberPriceList
	}
	return nil
}

func (x *CreateProductRequest) GetProductAttributeValueList() []*ProductAttributeValueList {
	if x != nil {
		return x.ProductAttributeValueList
	}
	return nil
}

func (x *CreateProductRequest) GetProductFullReductionList() []*ProductFullReductionList {
	if x != nil {
		return x.ProductFullReductionList
	}
	return nil
}

func (x *CreateProductRequest) GetProductLadderList() []*ProductLadderList {
	if x != nil {
		return x.ProductLadderList
	}
	return nil
}

func (x *CreateProductRequest) GetSkuStockList() []*SkuStockList {
	if x != nil {
		return x.SkuStockList
	}
	return nil
}

type CreateProductReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId int32 `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
}

func (x *CreateProductReply) Reset() {
	*x = CreateProductReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_product_v1_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductReply) ProtoMessage() {}

func (x *CreateProductReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_product_v1_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductReply.ProtoReflect.Descriptor instead.
func (*CreateProductReply) Descriptor() ([]byte, []int) {
	return file_api_product_v1_product_proto_rawDescGZIP(), []int{6}
}

func (x *CreateProductReply) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type UpdateProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProductRequest) Reset() {
	*x = UpdateProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_product_v1_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductRequest) ProtoMessage() {}

func (x *UpdateProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_product_v1_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductRequest.ProtoReflect.Descriptor instead.
func (*UpdateProductRequest) Descriptor() ([]byte, []int) {
	return file_api_product_v1_product_proto_rawDescGZIP(), []int{7}
}

type UpdateProductReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProductReply) Reset() {
	*x = UpdateProductReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_product_v1_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductReply) ProtoMessage() {}

func (x *UpdateProductReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_product_v1_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductReply.ProtoReflect.Descriptor instead.
func (*UpdateProductReply) Descriptor() ([]byte, []int) {
	return file_api_product_v1_product_proto_rawDescGZIP(), []int{8}
}

type DeleteProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProductRequest) Reset() {
	*x = DeleteProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_product_v1_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductRequest) ProtoMessage() {}

func (x *DeleteProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_product_v1_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductRequest.ProtoReflect.Descriptor instead.
func (*DeleteProductRequest) Descriptor() ([]byte, []int) {
	return file_api_product_v1_product_proto_rawDescGZIP(), []int{9}
}

type DeleteProductReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProductReply) Reset() {
	*x = DeleteProductReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_product_v1_product_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductReply) ProtoMessage() {}

func (x *DeleteProductReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_product_v1_product_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductReply.ProtoReflect.Descriptor instead.
func (*DeleteProductReply) Descriptor() ([]byte, []int) {
	return file_api_product_v1_product_proto_rawDescGZIP(), []int{10}
}

type GetProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetProductRequest) Reset() {
	*x = GetProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_product_v1_product_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductRequest) ProtoMessage() {}

func (x *GetProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_product_v1_product_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductRequest.ProtoReflect.Descriptor instead.
func (*GetProductRequest) Descriptor() ([]byte, []int) {
	return file_api_product_v1_product_proto_rawDescGZIP(), []int{11}
}

type GetProductReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetProductReply) Reset() {
	*x = GetProductReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_product_v1_product_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductReply) ProtoMessage() {}

func (x *GetProductReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_product_v1_product_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductReply.ProtoReflect.Descriptor instead.
func (*GetProductReply) Descriptor() ([]byte, []int) {
	return file_api_product_v1_product_proto_rawDescGZIP(), []int{12}
}

type ListProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListProductRequest) Reset() {
	*x = ListProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_product_v1_product_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductRequest) ProtoMessage() {}

func (x *ListProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_product_v1_product_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductRequest.ProtoReflect.Descriptor instead.
func (*ListProductRequest) Descriptor() ([]byte, []int) {
	return file_api_product_v1_product_proto_rawDescGZIP(), []int{13}
}

type ListProductReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListProductReply) Reset() {
	*x = ListProductReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_product_v1_product_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProductReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductReply) ProtoMessage() {}

func (x *ListProductReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_product_v1_product_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductReply.ProtoReflect.Descriptor instead.
func (*ListProductReply) Descriptor() ([]byte, []int) {
	return file_api_product_v1_product_proto_rawDescGZIP(), []int{14}
}

var File_api_product_v1_product_proto protoreflect.FileDescriptor

var file_api_product_v1_product_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x22, 0x83,
	0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x75, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x18, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x75, 0x6c, 0x6c, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x46, 0x75, 0x6c, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x5b, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x0c, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x4c,
	0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4c,
	0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x61, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x70, 0x44, 0x61, 0x74, 0x61, 0x22, 0xcf, 0x0e, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x46, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x46, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x50, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x69, 0x63, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4e, 0x65, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x69, 0x66, 0x74,
	0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x47, 0x69,
	0x66, 0x74, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x69, 0x66, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x47, 0x69, 0x66,
	0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x55,
	0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x77, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4c, 0x6f, 0x77, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x50, 0x69, 0x63,
	0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x50, 0x69,
	0x63, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x74,
	0x6d, 0x6c, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x48, 0x74, 0x6d, 0x6c,
	0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x29, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30,
	0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x49, 0x0a, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x2b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0f, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x19, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x2c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x64, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x2d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x11, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x2e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x61,
	0x64, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x53,
	0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x2f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x0c, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x32, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x13, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32,
	0xc1, 0x03, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x59, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x59, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x59, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x50, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x53,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x42, 0x32, 0x0a, 0x0e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x1e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2d,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_product_v1_product_proto_rawDescOnce sync.Once
	file_api_product_v1_product_proto_rawDescData = file_api_product_v1_product_proto_rawDesc
)

func file_api_product_v1_product_proto_rawDescGZIP() []byte {
	file_api_product_v1_product_proto_rawDescOnce.Do(func() {
		file_api_product_v1_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_product_v1_product_proto_rawDescData)
	})
	return file_api_product_v1_product_proto_rawDescData
}

var file_api_product_v1_product_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_product_v1_product_proto_goTypes = []interface{}{
	(*MemberPriceList)(nil),           // 0: api.product.v1.MemberPriceList
	(*ProductAttributeValueList)(nil), // 1: api.product.v1.ProductAttributeValueList
	(*ProductFullReductionList)(nil),  // 2: api.product.v1.ProductFullReductionList
	(*ProductLadderList)(nil),         // 3: api.product.v1.ProductLadderList
	(*SkuStockList)(nil),              // 4: api.product.v1.SkuStockList
	(*CreateProductRequest)(nil),      // 5: api.product.v1.CreateProductRequest
	(*CreateProductReply)(nil),        // 6: api.product.v1.CreateProductReply
	(*UpdateProductRequest)(nil),      // 7: api.product.v1.UpdateProductRequest
	(*UpdateProductReply)(nil),        // 8: api.product.v1.UpdateProductReply
	(*DeleteProductRequest)(nil),      // 9: api.product.v1.DeleteProductRequest
	(*DeleteProductReply)(nil),        // 10: api.product.v1.DeleteProductReply
	(*GetProductRequest)(nil),         // 11: api.product.v1.GetProductRequest
	(*GetProductReply)(nil),           // 12: api.product.v1.GetProductReply
	(*ListProductRequest)(nil),        // 13: api.product.v1.ListProductRequest
	(*ListProductReply)(nil),          // 14: api.product.v1.ListProductReply
}
var file_api_product_v1_product_proto_depIdxs = []int32{
	0,  // 0: api.product.v1.CreateProductRequest.MemberPriceList:type_name -> api.product.v1.MemberPriceList
	1,  // 1: api.product.v1.CreateProductRequest.ProductAttributeValueList:type_name -> api.product.v1.ProductAttributeValueList
	2,  // 2: api.product.v1.CreateProductRequest.ProductFullReductionList:type_name -> api.product.v1.ProductFullReductionList
	3,  // 3: api.product.v1.CreateProductRequest.ProductLadderList:type_name -> api.product.v1.ProductLadderList
	4,  // 4: api.product.v1.CreateProductRequest.SkuStockList:type_name -> api.product.v1.SkuStockList
	5,  // 5: api.product.v1.Product.CreateProduct:input_type -> api.product.v1.CreateProductRequest
	7,  // 6: api.product.v1.Product.UpdateProduct:input_type -> api.product.v1.UpdateProductRequest
	9,  // 7: api.product.v1.Product.DeleteProduct:input_type -> api.product.v1.DeleteProductRequest
	11, // 8: api.product.v1.Product.GetProduct:input_type -> api.product.v1.GetProductRequest
	13, // 9: api.product.v1.Product.ListProduct:input_type -> api.product.v1.ListProductRequest
	6,  // 10: api.product.v1.Product.CreateProduct:output_type -> api.product.v1.CreateProductReply
	8,  // 11: api.product.v1.Product.UpdateProduct:output_type -> api.product.v1.UpdateProductReply
	10, // 12: api.product.v1.Product.DeleteProduct:output_type -> api.product.v1.DeleteProductReply
	12, // 13: api.product.v1.Product.GetProduct:output_type -> api.product.v1.GetProductReply
	14, // 14: api.product.v1.Product.ListProduct:output_type -> api.product.v1.ListProductReply
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_api_product_v1_product_proto_init() }
func file_api_product_v1_product_proto_init() {
	if File_api_product_v1_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_product_v1_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberPriceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_product_v1_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeValueList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_product_v1_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductFullReductionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_product_v1_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductLadderList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_product_v1_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuStockList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_product_v1_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_product_v1_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_product_v1_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_product_v1_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_product_v1_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_product_v1_product_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_product_v1_product_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_product_v1_product_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_product_v1_product_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_product_v1_product_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProductReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_product_v1_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_product_v1_product_proto_goTypes,
		DependencyIndexes: file_api_product_v1_product_proto_depIdxs,
		MessageInfos:      file_api_product_v1_product_proto_msgTypes,
	}.Build()
	File_api_product_v1_product_proto = out.File
	file_api_product_v1_product_proto_rawDesc = nil
	file_api_product_v1_product_proto_goTypes = nil
	file_api_product_v1_product_proto_depIdxs = nil
}
