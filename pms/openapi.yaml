# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Order API
    version: 0.0.1
paths:
    /v1/cart:
        post:
            tags:
                - Order
            description: 添加sku到购物车
            operationId: Order_AddCartItem
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddCartItemRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddCartItemReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/cart/item/delete:
        post:
            tags:
                - Order
            description: 批量删除购物车中的商品
            operationId: Order_BatchDeleteCartItem
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BatchDeleteCartItemRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BatchDeleteCartItemReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/cart/{productId}/{productSkuId}:
        delete:
            tags:
                - Order
            description: 删除购物车中sku
            operationId: Order_DeleteCartItem
            parameters:
                - name: productId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: productSkuId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: memberId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteCartItemReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/order:
        get:
            tags:
                - Order
            description: 获取购物车商品列表
            operationId: Order_GetCartList
            parameters:
                - name: memberId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCartListReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Order
            description: 清空购物车
            operationId: Order_ClearCart
            parameters:
                - name: memberId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClearCartReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/order/{productId}/{productSkuId}:
        put:
            tags:
                - Order
            description: 更新购物车商品数量
            operationId: Order_UpdateCartItemQuantity
            parameters:
                - name: productId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: productSkuId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateCartItemQuantityRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateCartItemQuantityReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AddCartItemReply:
            type: object
            properties: {}
        AddCartItemRequest:
            type: object
            properties:
                productId:
                    type: string
                productSkuId:
                    type: string
                count:
                    type: integer
                    format: uint32
                memberId:
                    type: string
                price:
                    type: number
                    format: double
        BatchDeleteCartItemReply:
            type: object
            properties: {}
        BatchDeleteCartItemRequest:
            type: object
            properties:
                productIds:
                    type: array
                    items:
                        type: string
                memberId:
                    type: string
        CartItem:
            type: object
            properties:
                productSkuId:
                    type: string
                count:
                    type: integer
                    format: uint32
                price:
                    type: number
                    format: double
                productId:
                    type: string
        ClearCartReply:
            type: object
            properties: {}
        DeleteCartItemReply:
            type: object
            properties: {}
        GetCartListReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/CartItem'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateCartItemQuantityReply:
            type: object
            properties: {}
        UpdateCartItemQuantityRequest:
            type: object
            properties:
                productId:
                    type: string
                productSkuId:
                    type: string
                count:
                    type: integer
                    format: uint32
                memberId:
                    type: string
tags:
    - name: Order
